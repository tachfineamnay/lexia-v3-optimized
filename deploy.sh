#!/bin/bash

# Script de d√©ploiement pour LexiaV3
# Ce script automatise le processus de d√©ploiement de l'application

# Affichage des informations
echo "üöÄ D√©ploiement de LexiaV3 en cours..."
echo "-------------------------------------"

# Variables
FRONTEND_DIR="frontend"
BACKEND_DIR="backend"
LOGS_DIR="logs"

# Cr√©ation du dossier de logs s'il n'existe pas
mkdir -p $LOGS_DIR

# Fonction pour afficher les √©tapes
print_step() {
  echo "üìã $1"
}

# V√©rification des pr√©requis
print_step "V√©rification des pr√©requis..."
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n'est pas install√©. Veuillez installer Node.js (version 14+)."
    exit 1
fi

if ! command -v npm &> /dev/null; then
    echo "‚ùå NPM n'est pas install√©. Veuillez installer NPM."
    exit 1
fi

if ! command -v docker &> /dev/null; then
    echo "‚ö†Ô∏è Docker n'est pas install√©. Le d√©ploiement Docker ne sera pas disponible."
    DOCKER_AVAILABLE=false
else
    DOCKER_AVAILABLE=true
fi

# Installation des d√©pendances du frontend
print_step "Installation des d√©pendances du frontend..."
cd $FRONTEND_DIR
npm install --quiet
echo "‚úÖ D√©pendances du frontend install√©es avec succ√®s."

# Build du frontend
print_step "Construction du frontend..."
npm run build
if [ $? -eq 0 ]; then
    echo "‚úÖ Build du frontend r√©ussi."
else
    echo "‚ùå √âchec du build du frontend. V√©rifiez les logs pour plus de d√©tails."
    exit 1
fi

# Retour √† la racine du projet
cd ..

# Installation des d√©pendances du backend
print_step "Installation des d√©pendances du backend..."
cd $BACKEND_DIR
npm install --quiet
echo "‚úÖ D√©pendances du backend install√©es avec succ√®s."

# V√©rification de la configuration du backend
if [ ! -f ".env" ]; then
    echo "‚ö†Ô∏è Fichier .env non trouv√© dans le backend. Cr√©ation √† partir du mod√®le..."
    if [ -f ".env.example" ]; then
        cp .env.example .env
        echo "‚úÖ Fichier .env cr√©√© √† partir de .env.example."
    else
        echo "‚ùå Fichier .env.example non trouv√©. Veuillez cr√©er manuellement un fichier .env."
        exit 1
    fi
fi

# Retour √† la racine du projet
cd ..

# D√©ploiement avec Docker si disponible
if [ "$DOCKER_AVAILABLE" = true ]; then
    print_step "D√©ploiement avec Docker..."
    docker-compose down
    docker-compose up -d --build
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ D√©ploiement Docker r√©ussi."
    else
        echo "‚ùå √âchec du d√©ploiement Docker. V√©rifiez les logs pour plus de d√©tails."
        exit 1
    fi
else
    print_step "D√©marrage des services en mode d√©veloppement..."
    echo "Pour d√©marrer le frontend: cd $FRONTEND_DIR && npm run dev"
    echo "Pour d√©marrer le backend: cd $BACKEND_DIR && npm start"
fi

echo ""
echo "üéâ D√©ploiement termin√© avec succ√®s!"
echo "-------------------------------------"
echo "üìä Acc√®s √† l'application:"
echo "Frontend: http://localhost:5173"
echo "Backend API: http://localhost:5000/api"
echo "-------------------------------------"
