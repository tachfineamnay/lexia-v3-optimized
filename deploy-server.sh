#!/bin/bash

# Script de d√©ploiement pour LexiaV3 sur serveur de production
echo "üöÄ D√©ploiement de LexiaV3 sur serveur de production..."
echo "-------------------------------------"

# Variables
FRONTEND_DIR="frontend"
BACKEND_DIR="backend"
WEBROOT="/home/app.ialexia.fr/public_html"
PROJECT_DIR="/root/LexiaV3"

# Fonction pour afficher les √©tapes
print_step() {
  echo "üìã $1"
}

# V√©rification des pr√©requis
print_step "V√©rification des pr√©requis..."
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n'est pas install√©. Installation en cours..."
    curl -fsSL https://rpm.nodesource.com/setup_18.x | bash -
    yum install -y nodejs
fi

if ! command -v npm &> /dev/null; then
    echo "‚ùå NPM n'est pas install√© avec Node.js"
    exit 1
fi

# Aller dans le r√©pertoire du projet
cd $PROJECT_DIR

# Installation des d√©pendances du frontend
print_step "Installation des d√©pendances du frontend..."
cd $FRONTEND_DIR
npm install
echo "‚úÖ D√©pendances du frontend install√©es avec succ√®s."

# Build du frontend
print_step "Construction du frontend..."
npm run build
if [ $? -eq 0 ]; then
    echo "‚úÖ Build du frontend r√©ussi."
else
    echo "‚ùå √âchec du build du frontend."
    exit 1
fi

# Retour √† la racine du projet
cd ..

# Sauvegarde de l'ancien d√©ploiement
print_step "Sauvegarde de l'ancien d√©ploiement..."
if [ -d "$WEBROOT" ]; then
    cp -r $WEBROOT ${WEBROOT}_backup_$(date +%Y%m%d_%H%M%S)
    echo "‚úÖ Sauvegarde cr√©√©e."
fi

# D√©ploiement des fichiers frontend
print_step "D√©ploiement des fichiers frontend..."
rm -rf $WEBROOT/*
cp -r $FRONTEND_DIR/dist/* $WEBROOT/
echo "‚úÖ Fichiers frontend d√©ploy√©s."

# Configuration des permissions
print_step "Configuration des permissions..."
chown -R app.ialexia.fr:app.ialexia.fr $WEBROOT
chmod -R 755 $WEBROOT
find $WEBROOT -type f -exec chmod 644 {} \;
echo "‚úÖ Permissions configur√©es."

# Installation des d√©pendances du backend
print_step "Installation des d√©pendances du backend..."
cd $BACKEND_DIR
npm install
echo "‚úÖ D√©pendances du backend install√©es."

# Configuration du backend
if [ ! -f ".env" ]; then
    echo "‚ö†Ô∏è Fichier .env non trouv√© dans le backend. Cr√©ation √† partir du mod√®le..."
    if [ -f ".env.example" ]; then
        cp .env.example .env
        echo "‚úÖ Fichier .env cr√©√© √† partir de .env.example."
        echo "‚ö†Ô∏è N'oubliez pas de configurer les variables d'environnement dans .env"
    fi
fi

# Retour √† la racine
cd ..

# Cr√©ation d'un fichier .htaccess pour les routes React
print_step "Configuration du serveur web..."
cat > $WEBROOT/.htaccess << 'EOF'
RewriteEngine On
RewriteBase /

# Handle Angular and React Router
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.html [L]

# Cache static assets
<FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
    ExpiresActive On
    ExpiresDefault "access plus 1 year"
    Header append Cache-Control "public"
</FilesMatch>

# Compress text files
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
</IfModule>
EOF

echo "‚úÖ Configuration du serveur web cr√©√©e."

# Test de l'installation
print_step "Test de l'installation..."
if [ -f "$WEBROOT/index.html" ]; then
    echo "‚úÖ Fichier index.html pr√©sent."
else
    echo "‚ùå Fichier index.html manquant."
    exit 1
fi

if [ -d "$WEBROOT/assets" ]; then
    echo "‚úÖ Dossier assets pr√©sent."
else
    echo "‚ö†Ô∏è Dossier assets manquant - v√©rifiez le build."
fi

echo ""
echo "üéâ D√©ploiement termin√© avec succ√®s!"
echo "-------------------------------------"
echo "üìä Informations de d√©ploiement:"
echo "Frontend d√©ploy√© dans: $WEBROOT"
echo "URL: https://app.ialexia.fr"
echo "Backend dans: $PROJECT_DIR/$BACKEND_DIR"
echo "-------------------------------------"
echo ""
echo "üìù Prochaines √©tapes:"
echo "1. V√©rifiez que l'application fonctionne sur https://app.ialexia.fr"
echo "2. Configurez les variables d'environnement dans $PROJECT_DIR/$BACKEND_DIR/.env"
echo "3. D√©marrez le backend si n√©cessaire"
echo "-------------------------------------"